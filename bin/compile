#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# parse args
BUILD_DIR=$1
CACHE_DIR=$2

# <BUILD_DIR> is (during this stage) a temporary directory. 
# During execution of your slug it'll be known as '/app'.


. $(dirname $0)/common


BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}


#create the cache dir if it doesn't exist
mkdir -p $VENDORING_DIR

# change to vendoring dir to install kx kdb
cd $VENDORING_DIR

if [ -x $KDB_HOME/q ] ; then
    #assuming kdb is already installed...
	echo "-----> Using KDB $KDB_VER....."
else
	echo "-----> Installing KDB $KDB_VER...from '$KDB_URL' ... [start]"
	TMPFILE='tempfile.zip'
	curl --max-time 180 --location $KDB_URL -o $TMPFILE
	unzip -d $VENDORING_DIR $TMPFILE
	rm $TMPFILE
	chmod +x $KDB_HOME/q
	echo "-----> Installing KDB $KDB_VER..... [done ]!"
fi

export QHOME=$KDB_HOME/q
export PATH=$PATH:$QHOME/l32
#alias q="rlwrap $QHOME/l32/q"

# apt-get install ia32-libs && yum install rlwrap

if [ ! -f $BUILD_DIR/init.q ] ; then
	echo "Failed to run app with KDB q"
fi

# change to build dir to run ant
cd ${BUILD_DIR}

# build app
BUILDCMD="$QHOME/q init.q"
echo "-----> executing $BUILDCMD"

$BUILDCMD 2>&1 | indent
ls -al ${PWD}  | indent

ls -al ${BUILD_DIR}  | indent

if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  echo " !     Failed to build app with kdb q"
  exit 1
fi
